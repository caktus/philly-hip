# Generated by Django 3.2.15 on 2022-10-11 18:03

import json
import sys
from importlib import import_module

from django.core.serializers.json import DjangoJSONEncoder
from django.db import migrations
from django.utils.timezone import now


def remove_headers_from_start_of_static_page_body(apps, schema_editor):
    """
    Loop over all StaticPages, and remove headers from the beginning of the body.

    Sometimes, a StaticPage's body begins with a header, like "<h2>Newsletters</h2>",
    which should instead be displayed as an <h1> element at the top of the page,
    based on the page title. We are currently making the change (in other files)
    to display the page title as an <h1> element at the top of the page, so here
    we remove the redundant <h2> element at the beginning of the page body.
    """
    StaticPage = apps.get_model("hip", "StaticPage")
    Revision = import_module("wagtail.models").Revision

    # Keep track of the StaticPages that are edited, so we can print out results at the end.
    edited_pages = []

    for page in StaticPage.objects.all():
        page_body = page.body[0].value["body"]
        if page_body:
            first_block = page_body[0].value
            if hasattr(first_block, "source") and first_block.source.startswith("<h2"):
                # Determine the length of the header at the beginning of the first_block.
                header_length = first_block.source.index("</h") + len("</h2>")
                # Determine the first block text, without the header at the beginning.
                new_first_block_str = first_block.source[header_length:]
                # Set the new_first_block_str into the block on the page.
                page_body[0].value.source = new_first_block_str
                page.save()
                edited_pages.append(page)

                # Create a Revision for the change that was just made.
                latest_revision = (
                    Revision.objects.filter(object_id=page.id)
                    .order_by("-created_at")
                    .first()
                )
                latest_revision_content_json = latest_revision.content
                latest_revision_content_body_json = json.loads(
                    latest_revision_content_json["body"]
                )
                first_block_value = latest_revision_content_body_json[0]["value"][
                    "body"
                ][0]["value"]
                # Determine the length of the header at the beginning of the first_block_value.
                header_length = first_block_value.index("</h") + len("</h2>")
                # Determine the first block text, without the header at the beginning.
                new_first_block_value_str = first_block_value[header_length:]
                new_revision_content_json = latest_revision_content_json.copy()
                new_revision_content_body_json = json.loads(
                    new_revision_content_json["body"]
                )
                new_revision_content_body_json[0]["value"]["body"][0][
                    "value"
                ] = new_first_block_value_str
                new_revision_content_json["body"] = json.dumps(
                    new_revision_content_body_json, cls=DjangoJSONEncoder
                )
                new_revision = Revision.objects.create(
                    content_type=latest_revision.content_type,
                    base_content_type=latest_revision.base_content_type,
                    object_id=str(page.id),
                    submitted_for_moderation=latest_revision.submitted_for_moderation,
                    created_at=now(),
                    object_str=latest_revision.object_str,
                    content=new_revision_content_json,
                    approved_go_live_at=latest_revision.approved_go_live_at,
                )
                new_revision.publish()

    # Log the StaticPages that were edited.
    sys.stdout.write("\nThe following StaticPages were edited:\n")
    for static_page in edited_pages:
        sys.stdout.write(
            f"\t{static_page.title} (pk of {static_page.pk})   {static_page.url_path}\n"
        )


class Migration(migrations.Migration):

    dependencies = [
        ("hip", "0023_auto_20221025_1052"),
    ]

    operations = [
        migrations.RunPython(
            remove_headers_from_start_of_static_page_body, migrations.RunPython.noop
        ),
    ]
