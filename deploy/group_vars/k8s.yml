---

# ----------------------------------------------------------------------------
# Global: CloudFormation stack outputs. See all.yml for stack parameters.
# ----------------------------------------------------------------------------

ClusterEndpoint: <<FILL IN>> # The connection endpoint for the EKS cluster API. -
DatabaseAddress: <<FILL IN>> # The connection endpoint for the database. -
RepositoryURL: <<FILL IN>> # The docker repository URL

# ----------------------------------------------------------------------------
# caktus.django-k8s: Shared configuration variables for staging and production
#                    environments.
# ----------------------------------------------------------------------------


k8s_auth_host: "{{ ClusterEndpoint }}"
k8s_auth_ssl_ca_cert: "k8s_auth_ssl_ca_cert.txt"
k8s_namespace: "{{ app_name }}-{{ env_name }}"

k8s_ingress_certificate_issuer: letsencrypt-production

# App pod configuration:
k8s_container_name: app
k8s_container_port: 8000
k8s_container_image: "{{ RepositoryURL }}/learn-appli-14ljm5uijjeox"
k8s_container_image_pull_policy: Always
k8s_container_replicas: 2
k8s_migrations_enabled: true
k8s_collectstatic_enabled: false
k8s_container_ingress_annotations:
  nginx.ingress.kubernetes.io/proxy-body-size: 100m
  # These are in seconds, but need to be specified without the trailing 's'
  # usually seen in nginx.conf proper.
  nginx.ingress.kubernetes.io/proxy-connect-timeout: 1800
  nginx.ingress.kubernetes.io/proxy-send-timeout: 1800
  nginx.ingress.kubernetes.io/proxy-read-timeout: 1800
  # Workaround for lack of annotation for send_timeout parameter:
  # https://github.com/kubernetes/ingress-nginx/issues/2441#issuecomment-419714384
  nginx.ingress.kubernetes.io/configuration-snippet: |
    send_timeout 1800s;

# Shared environment variables:
env_database_url: "postgres://{{ app_name }}_{{ env_name }}:{{ database_password }}@{{ DatabaseAddress }}:5432/{{ app_name }}_{{ env_name }}"
env_django_settings: "{{ app_name}}.settings.deploy"
env_cache_host: memcached:11211
env_default_file_storage: "{{ app_name }}.storages.MediaBoto3Storage"
env_media_storage_bucket_name: "{{ app_name }}-{{ env_name }}-assets"
env_aws_default_acl: public-read
env_media_location: media/
# New Relic APM: Caktus Free Account
env_new_relic_app_name: "{{ k8s_namespace }}"
env_new_relic_license_key: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          62306464353566656534663433323735383536333033343137613664646331396436393833326430
          6361313430343933333939343735326231643462633232650a613431656565393331313739633064
          30346262356634303531303530653330653066363664396334666162306332616563636231373333
          3632303434353736330a343132633164326632613663643236623661653937663565646266306664
          61616562396330623164643937333539653864666230366363646532386439643361303432303332
          6163633630613537303439346431353566656133616131373762
env_sentry_dsn: https://b914699ac410428291e919c39dd0bb10@o168020.ingest.sentry.io/5319441

# Auxillary pod configuration:
k8s_memcached_enabled: true

# S3 bucket configuration:
k8s_s3_region: "{{ aws_region }}"
k8s_s3_cluster_name: "{{ k8s_cluster_name }}"
